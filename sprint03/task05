/Create the commonStudents() method of the MyUtils class to return a HashSet
// of common elements of two student lists.
//For example, for a given list1
// [Students [id=1, name=Ivan], Students [id=2, name=Petro], Students [id=3, name=Stepan]]
// and list2
// [Students [id=1, name=Ivan], Students [id=3, name=Stepan], Students [id=4, name=Andriy]]
// you should get [Students [id=3, name=Stepan], Students [id=1, name=Ivan]].

import java.util.HashSet;
import java.util.List;
import java.util.Set;
public class MyUtils {
    public static class Student {
        private int id;
        private String name;
       public Student(int id, String name) {
            this.id = id;
            this.name = name;
        }
        
        @Override
        public String toString() {
            return "Students [id=" + id + ", name=" + name + "]";
        }
        
        @Override
        public boolean equals(Object obj) {
            if (obj == this) {
                return true;
            }
            if (obj == null || obj.getClass() != this.getClass()) {
                return false;
            }
            Student student = (Student) obj;
           return id == student.id && ((name == student.name) || (name != null && name.equals(student.name)));
        }
        
        @Override
        public int hashCode() {
            final int prime = 31;
            int result = 1;
            result = prime * result + ((name == null) ? 0 : name.hashCode());
            result = prime * result + id;
            return result;
        }
    }
    
    public Set<Student> commonStudents(List<Student> list1, List<Student> list2) {
        Set<Student> set = new HashSet<Student>();
        for(Student student1 : list1) {
            for(Student student2 : list2) {
                if (student1.equals(student2)) {
                    set.add(student1);
                }
            }
        }
        return set;
    }
}
